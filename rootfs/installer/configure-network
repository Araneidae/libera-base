#!/bin/sh

# Script for configuring the network.  As this is surprisingly involved, this
# is placed in a separate script.

HERE="$(dirname "$0")"
. "$HERE"/functions


# Helper function for the two functions below, called thus:
#
#   compute_elements ip mask action
#
# Returns an IP address generated by applying action to each component of ip
# and mask in turn
compute_elements()
{
    local IFS=.
    MASK="$2"

    dot=
    for ip in $1; do
        mask="${MASK%%.*}"
        MASK="${MASK#*.}"
        echo -n "$dot"
        dot=.
        eval echo -n '$(('$3'))'
    done
}

# From an IP address and a net mask computes the associated network as
#   IP & mask
compute_network()   { compute_elements $1 $2 'ip & mask'; }
compute_broadcast() { compute_elements $1 $2 '255 & ~(mask & ~ip)'; }


IPADDR="$(read_config ipaddr)"
NETMASK="$(read_config netmask)"
NETWORK="$(compute_network $IPADDR $NETMASK)"
GATEWAY="$(read_config gatewayip)"
HOSTNAME="$(read_config hostname)"

echo "Configuring network $IPADDR/$NETMASK"
cat <<EOF >>/mnt/mtd4/etc/network/interfaces

auto eth0
iface eth0 inet static
    address $IPADDR
    network $NETWORK
    netmask $NETMASK
    broadcast $(compute_broadcast $IPADDR $NETMASK)
EOF

if [ -n "$GATEWAY" ]; then
    echo "Configuring gateway $GATEWAY"
    echo "    gateway $GATEWAY" >>/mnt/mtd4/etc/network/interfaces
fi

echo "Configuring host name $HOSTNAME"
echo "$HOSTNAME" >/mnt/mtd4/etc/hostname

# Now set up the resolv.conf and extra mounts.  We need to identify our
# network at this point.
case "$NETWORK" in
    172.23.240.0)   network=lab ;;
    172.23.192.0)   network=pri ;;
    *)  Error 'Do not recognise network, resolv.conf not configured.'
esac

echo "Configuring resolv.conf and local mounts for $network"
echo "FSTABS=/etc/fstab.$network" >/mnt/mtd4/etc/default/mount-local
ln -s resolv.conf.$network /mnt/mtd4/etc/resolv.conf
