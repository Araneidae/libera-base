From 9baa8399a18a93c50f314a6e7c825eb682e4ff54 Mon Sep 17 00:00:00 2001
From: Michael Abbott <michael.abbott@diamond.ac.uk>
Date: Wed, 25 Mar 2009 09:42:50 +0000
Subject: [PATCH 2/2] Patch for PXA_SSP support.
  - Prevent bogus attempt to free unallocated irq on ssp exit.
  - Enable PXA_SSP for selection independently of board support.

---
 arch/arm/mach-pxa/Kconfig |    2 +-
 arch/arm/mach-pxa/ssp.c   |    6 ++++--
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/arch/arm/mach-pxa/Kconfig b/arch/arm/mach-pxa/Kconfig
index 2a60846..50aa41c 100644
--- a/arch/arm/mach-pxa/Kconfig
+++ b/arch/arm/mach-pxa/Kconfig
@@ -274,7 +274,7 @@ config PXA_SHARP_Cxx00
 	  Enable common support for Sharp Cxx00 models
 
 config PXA_SSP
-	tristate
+	tristate "Synchronous Serial Port controller (SSP) support"
 	help
 	  Enable support for PXA2xx SSP ports
 endif
diff --git a/arch/arm/mach-pxa/ssp.c b/arch/arm/mach-pxa/ssp.c
index 0bb3198..2e80188 100644
--- a/arch/arm/mach-pxa/ssp.c
+++ b/arch/arm/mach-pxa/ssp.c
@@ -285,7 +285,7 @@ int ssp_init(struct ssp_dev *dev, u32 port, u32 init_flags)
 			goto out_region;
 		dev->irq = ssp->irq;
 	} else
-		dev->irq = 0;
+		dev->irq = -1;  // Flag so we don't try to release this
 
 	/* turn on SSP port clock */
 	clk_enable(ssp->clk);
@@ -306,7 +306,8 @@ void ssp_exit(struct ssp_dev *dev)
 	struct ssp_device *ssp = dev->ssp;
 
 	ssp_disable(dev);
-	free_irq(dev->irq, dev);
+	if (dev->irq != -1)
+		free_irq(dev->irq, dev);
 	clk_disable(ssp->clk);
 	ssp_free(ssp);
 }
@@ -420,6 +421,7 @@ static int __devinit ssp_probe(struct platform_device *pdev, int type)
 	ssp->port_id = pdev->id + 1;
 	ssp->use_count = 0;
 	ssp->type = type;
+	ssp->pdev = pdev;
 
 	mutex_lock(&ssp_lock);
 	list_add(&ssp->node, &ssp_list);
-- 
1.6.1.3

